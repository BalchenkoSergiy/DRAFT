*** Variables and Data Types ***
    DATA types:
Primitive data types:
    - byte      - number            - 4 bytes
    - short     - number            - 2 bytes
    - int       - number            - 8 bytes
    - long      - number            - 1 bytes
    - float     - float number      - 4 bytes 
    - double    - float number      - 8 bytes
    - char      - a character       - unicode encoding (2 bytes)
    - boolean   - true or false     - true or false

    при ініціалізації змінних пишемо ці типи данних завжди із малої літери
 
Non-Primitive data types (це типи, які не завжди визначені. Ви також можете визначити відповідно до ваших потреб):
    - об'єктно-орієнтовані класи
    - рядки, масиви рядків та клас

Основна різниця між примітивними та не примітивними типами данних є: коли ми посилаємось на змінну із примітивним типом данних і потім змінюємо значення то значення зміниться тільки у однієї змінної. А якщо ми будемо це робити із не примітивним типом данних то значення зміниться у всіх залежних змінних.

Three types of variables:
    - Local
    - Instance - Створена на рівні класу
    - Class/Static - На рівні імені класу

Declaring of variables:
    [data type] [variable] [= value] [ ,variable [ = value]....];
    Можна ініціалізувати одразу кілька змінних через кому

*** Demo: Working with Data Types ***

package JavaDeveloper.JavaFundamentals.src.basics;

import java.util.Date;

public class VariablesAndDataTypesExample {
    public static void main(String[] args) {

        // Primitive data types
        byte age = 23;
        long viewsCount = 1_112_345_678;
        float price = 234.56F;
        char gender = 'M';
        boolean isValid = true;
        
        System.out.println(age);
        System.out.println(viewsCount);
        System.out.println(price);
        System.out.println(gender);
        System.out.println(isValid);

        // Non-Primitive data types
        String name = "King Kochhar";
        Date now = new Date();

        System.out.println(name);
        System.out.println(now);
    }
    
}

*** Reading input from user ***
У Java ви можете приймати введення трьома способами. 
    - BufferedReader
    - Scanner
        Зчитує ввід із клавіатури та повертає String
        Методи які можна використовувати тут:
            - public String next() - Returns the next token from the scanner.
            - public String nextLine() - Moved the scanner position to the next line and returnes the value as a string.
            - public byte nextByte() - Scanes the next token as a byte.
            - Public short nextShort() - Scanes the next token as a short value.
            - public int nextInt() - Scanes the next token as an int value.
    - Console

    package JavaDeveloper.JavaFundamentals.src.basics;

import java.util.Scanner;

public class readingInputFromUser_04 {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter your name:");
        String name1 = scanner.nextLine();

        System.out.print("Enter your age:");
        int age = scanner.nextInt();

        System.out.print("Enter your gender (M/F)");
        char gender = scanner.next().charAt(0);

        System.out.print("Enter your contact:");
        double contact = scanner.nextDouble();

        System.out.print("What is your name? \n");
        Scanner scanner1 = new Scanner(System.in);
        String name2 = scanner1.next();

        System.out.println("Name1 -> " + name1);
        System.out.println("Age -> " + age);
        System.out.println("Gender -> " + gender);
        System.out.println("Contact -> " + contact);
        System.out.println("Name2 -> " + name2);
    }
}